// applied when device is in light mode
.ns-light {
    .bg-primary {
      background-color: #fdfdfd;
    }
    .bg-secondary {
      background-color: #ffffff;
    }
    .text-primary {
      color: #444;
    }
    .text-secondary {
      color: #777;
    }
  }
  
  // applied when device is in dark mode
  .ns-dark {
    .bg-primary {
      background-color: #212121;
    }
    .bg-secondary {
      background-color: #383838;
    }
    .text-primary {
      color: #eee;
    }
    .text-secondary {
      color: #ccc;
    }
  }
  
  
  <!-- app/components/Home.vue -->
  
  <template>
    <Page>
      <ActionBar title="NativeFlix" />
      <StackLayout height="100%">
        <ListView
          height="100%"
          separatorColor="transparent"
          for="item in flicks"
          @itemTap="onFlickTap"
        >
          <!-- ðŸ‘ˆ  Add this -->
          <v-template>
            <GridLayout
              height="280"
              borderRadius="10"
              class="bg-secondary"
              rows="*, auto, auto"
              columns="*"
              margin="5 10"
              padding="0"
            >
              <Image row="0" margin="0" stretch="aspectFill" :src="item.image" />
              <Label
                row="1"
                margin="10 10 0 10"
                fontWeight="700"
                class="text-primary"
                fontSize="18"
                :text="item.title"
              />
              <Label
                row="2"
                margin="0 10 10 10"
                class="text-secondary"
                fontSize="14"
                textWrap="true"
                :text="item.description"
              />
            </GridLayout>
          </v-template>
        </ListView>
      </StackLayout>
    </Page>
  </template>
  
  <script lang="ts">
    import Vue from 'nativescript-vue'
    import FlickService from '../services/FlickService'
    import Details from './Details.vue'
  
    const flickService = new FlickService()
  
    export default Vue.extend({
      data() {
        return {
          flicks: flickService.getFlicks()
        }
      },
      methods: {
        onFlickTap(args) {
          const id = args.item.id
          this.$navigateTo(Details, {
            props: { id }
          })
        }
      }
    })
  </script>
  
  
  
  <!-- app/components/Details.vue -->
  
  <template>
    <Page></Page>
  </template>
  
  <script lang="ts">
  import Vue from 'nativescript-vue'
  // Add this ðŸ‘‡
  import FlickService from '../services/FlickService'
  
  // Add this ðŸ‘‡
  const flickService = new FlickService()
  
  export default Vue.extend({
    // Add this ðŸ‘‡
    props: ['id'],
    data() {
      // Add this ðŸ‘‡
      return {
        flick: flickService.getFlickById(this.id)
      }
    }
  })
  </script>
  
  
  
  
  
  <!-- app/components/Details.vue -->
  
  <template>
    <Page>
      <!-- Add this ðŸ‘‡ -->
      <ActionBar :title="flick.title" />
  
      <!-- Add this ðŸ‘‡ -->
      <ScrollView height="100%">
        <StackLayout>
          <Image margin="0" stretch="aspectFill" :src="flick.image" />
          <StackLayout padding="10 20">
            <StackLayout v-for="detail in flick.details" :key="detail.id">
              <Label
                marginTop="15"
                fontSize="16"
                fontWeight="700"
                class="text-primary"
                textWrap="true"
                :text="detail.title"
              />
              <Label
                fontSize="14"
                class="text-secondary"
                textWrap="true"
                :text="detail.body"
              />
            </StackLayout>
          </StackLayout>
        </StackLayout>
      </ScrollView>
    </Page>
  </template>
  
  <script lang="ts">
  import Vue from 'nativescript-vue'
  import FlickService from '../services/FlickService'
  
  const flickService = new FlickService()
  
  export default Vue.extend({
    props: ['id'],
    data() {
      return {
        flick: flickService.getFlickById(this.id)
      }
    }
  })
  </script>
  